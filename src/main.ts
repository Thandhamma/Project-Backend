// src/main.ts

import { NestFactory } from '@nestjs/core';
import { AppModule } from './app.module';
import { HttpExceptionFilter } from './common/filters/http-exception/http-exception.filter';
import { ValidationPipe } from '@nestjs/common';
import helmet from 'helmet';
import rateLimit from 'express-rate-limit';
import { SwaggerModule, DocumentBuilder } from '@nestjs/swagger';

async function bootstrap() {
  const app = await NestFactory.create(AppModule);

  app.use(helmet());
  // üëá ‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÇ‡∏Ñ‡πâ‡∏î‡∏™‡πà‡∏ß‡∏ô‡∏ô‡∏µ‡πâ‡πÄ‡∏Ç‡πâ‡∏≤‡πÑ‡∏õ
  app.enableCors({
    origin: 'http://localhost:5173', // URL ‡∏Ç‡∏≠‡∏á Frontend Vite
    credentials: true, // ‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á cookies ‡∏´‡∏£‡∏∑‡∏≠ authorization headers
  });

  // ‡πÉ‡∏ä‡πâ HttpExceptionFilter ‡∏ó‡∏±‡πà‡∏ß‡∏ó‡∏±‡πâ‡∏á‡πÅ‡∏≠‡∏õ‡∏û‡∏•‡∏¥‡πÄ‡∏Ñ‡∏ä‡∏±‡∏ô
  app.useGlobalFilters(new HttpExceptionFilter());
  app.useGlobalPipes(
    new ValidationPipe({
      whitelist: true, // ‡∏Å‡∏≥‡∏à‡∏±‡∏î properties ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏∞‡∏ö‡∏∏‡πÉ‡∏ô DTO
      forbidNonWhitelisted: true, // ‡πÇ‡∏¢‡∏ô error ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ properties ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏£‡∏∞‡∏ö‡∏∏‡πÉ‡∏ô DTO
      transform: true, // ‡πÅ‡∏õ‡∏•‡∏á payloads ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡πá‡∏ô instance ‡∏Ç‡∏≠‡∏á class ‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÉ‡∏ô DTO
    }),
  );

  app.use(
    rateLimit({
      windowMs: 15 * 60 * 1000, // 15 minutes
      max: 100, // limit each IP to 100 requests per windowMs
      message:
        'Too many requests from this IP, please try again after 15 minuutes',
    }),
  );

  const config = new DocumentBuilder()
    .setTitle('GodBless You API')
    .setDescription('The API documentation for the GodBless project')
    .setVersion('1.0')
    .addBearerAuth()
    .build();

  const document = SwaggerModule.createDocument(app, config);

  SwaggerModule.setup('api', app, document);

  await app.listen(3000);
}
bootstrap();
